{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "vmName": {
            "defaultValue": "myVm",
            "type": "string",
			"metadata": { "description": "Name to be assigned to the new VM" }
        },
         "vnetName": {
            "defaultValue": "myVnet",
            "type": "string",
			"metadata": { "description": "vnet where new VM should be placed. This vnet must already exist." }
        },
         "subnetName": {
            "defaultValue": "default",
            "type": "string",
			"metadata": { "description": "Subnet where the new VM should be placed. This subnet must already exist." }
        },
         "vmType": {
            "defaultValue": "ubuntu",
            "type": "string",
			"allowedValues": [ "ubuntu", "windows" ],
			"metadata": { "description": "Type of VM. At this point only ubuntu and windows supported" }
        },
         "vmSize": {
            "defaultValue": "Standard_A0",
            "type": "string",
			"allowedValues": [ "Standard_A0", "Standard_A1_v2", "Standard_D2_v3", "Standard_D2s_v3", "Standard_D1_v2", "Standard_DS1_v2" ],
			"metadata": { "description": "Size of the new VM. Only a limited subset of sizes are supported" }
        },
		"adminUsername": {
            "type": "string",
			"metadata": { "description": "Username to login to the VM, either over SSH for Linux VMs, or over RDP for Windows VMs" }
        },
		"adminPassword": {
            "type": "securestring",
			"metadata": { "description": "Password to login to the VM." }
        }
    },
    "variables": {
		"vmTypeGroup": "[if(equals(parameters('vmType'), 'windows'), 'windows', 'linux')]",
		"diskType": "Standard_LRS",
		"diskSize": 30,
		"avSetName": "[concat(parameters('vmName'), '-avSet')]",
        "nicName": "[concat(parameters('vmName'),'-nic')]",
        "nsgName": "[concat(parameters('vmName'),'-nsg')]",
		"diskName": "[concat(parameters('vmName'),'-osDisk')]",
		"vmStorageProfileHash": {
			"windows": {
				"imageReference": {
            		"publisher": "MicrosoftWindowsServer",
            		"offer": "WindowsServer",
            		"sku": "2012-R2-Datacenter",
            		"version": "latest"
				},
				"osDisk": {
					"osType": "Windows",
					"caching": "ReadWrite",
					"createOption": "FromImage",
					"name": "[variables('diskName')]",
					"diskSizeGb": "[variables('diskSize')]",
					"managedDisk": {
						"storageAccountType": "[variables('diskType')]"
					}
				},
				"dataDisks": []
			},
			"ubuntu": {
				"imageReference": {
					"publisher": "Canonical",
					"offer": "UbuntuServer",
					"sku": "16.04.0-LTS",
					"version": "latest"
				},
				"osDisk": {
					"osType": "Linux",
					"caching": "ReadWrite",
					"name": "[variables('diskName')]",
					"diskSizeGb": "[variables('diskSize')]",
					"createOption": "FromImage",
					"managedDisk": {
						"storageAccountType": "[variables('diskType')]"
					}
				},
				"dataDisks": []
			}
		},
		"vmStorageProfile": "[variables('vmStorageProfileHash')[parameters('vmType')]]",
		"vmOsProfileHash": {
			"windows": {
				"computerName": "[parameters('vmName')]",
				"adminUsername": "[parameters('adminUsername')]",
				"adminPassword": "[parameters('adminPassword')]"
			},
			"linux": {
				"computerName": "[parameters('vmName')]",
				"adminUsername": "[parameters('adminUsername')]",
				"linuxConfiguration": {
					"disablePasswordAuthentication": false
				},
				"secrets": [],
				"adminPassword": "[parameters('adminPassword')]"				
			}
		},
		"vmOsProfile": "[variables('vmOsProfileHash')[variables('vmTypeGroup')]]"
	},
    "resources": [
  	{
		"comments": "Deploy Virtual Machine",
		"type": "Microsoft.Compute/virtualMachines",
		"name": "[parameters('vmName')]",
		"apiVersion": "2017-03-30",
		"location": "[resourceGroup().location]",
		"properties": {
			"availabilitySet": {
				"id": "[resourceId('Microsoft.Compute/availabilitySets', variables('avSetName'))]"
			},
			"hardwareProfile": {
				"vmSize": "[parameters('vmSize')]"
			},
			"storageProfile": "[variables('vmStorageProfile')]",
			"osProfile": "[variables('vmOsProfile')]",
			"networkProfile": {
				"networkInterfaces": [
					{
						"id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]",
						"properties": {
							"primary": true
						}
					}
				]
			}
		},
		"resources": [],
		"dependsOn": [
			"[variables('nicName')]",
			"[variables('avSetName')]"
		]
	},
	{
		"type": "Microsoft.Compute/availabilitySets",
		"name": "[variables('avSetName')]",
		"apiVersion": "2017-03-30",
		"location": "[resourceGroup().location]",
		"properties": {
			"platformUpdateDomainCount": 2,
			"platformFaultDomainCount": 2
		},
		"sku": {
			"name": "Aligned"
		}
	},
	{
		"comments": "Create Network Interface Card, associated to the NSG",
		"type": "Microsoft.Network/networkInterfaces",
		"name": "[variables('nicName')]",
		"apiVersion": "2017-06-01",
		"location": "[resourceGroup().location]",
		"properties": {
			"ipConfigurations": [
				{
					"name": "[concat(parameters('vmName'), '-ipconfig1')]",
					"properties": {
						"privateIPAllocationMethod": "Dynamic",
						"subnet": {
							"id": "[concat(resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName')), '/subnets/', parameters('subnetName'))]"
						}
					}
				}
			],
			"dnsSettings": {
				"dnsServers": []
			},
			"enableIPForwarding": false,
			"networkSecurityGroup": {
				"id": "[resourceId('Microsoft.Network/networkSecurityGroups', concat(variables('nsgName'), '-', variables('vmTypeGroup')))]"
			}
		},
		"resources": [],
		"dependsOn": [
			"[concat(variables('nsgName'), '-', variables('vmTypeGroup'))]"
		]
	},
	{
		"comments": "Create a Linux NSG, in case the VM to be provisioned is a Linux machine",
		"type": "Microsoft.Network/networkSecurityGroups",
		"name": "[concat(variables('nsgName'),'-linux')]",
		"condition": "[equals(variables('vmTypeGroup'),'linux')]",
		"apiVersion": "2017-06-01",
		"location": "[resourceGroup().location]",
		"properties": {
			"securityRules": [
				{
					"name": "default-allow-ssh",
					"properties": {
						"protocol": "Tcp",
						"sourcePortRange": "*",
						"destinationPortRange": "22",
						"sourceAddressPrefix": "*",
						"destinationAddressPrefix": "*",
						"access": "Allow",
						"priority": 100,
						"direction": "Inbound"
					}
				}
			]
		},
		"resources": [],
		"dependsOn": []
	},
	{
		"comments": "Create a Linux NSG, in case the VM to be provisioned is a Windows machine",
		"type": "Microsoft.Network/networkSecurityGroups",
		"name": "[concat(variables('nsgName'),'-windows')]",
		"condition": "[equals(variables('vmTypeGroup'),'windows')]",
		"apiVersion": "2017-06-01",
		"location": "[resourceGroup().location]",
		"properties": {
			"securityRules": [
				{
					"name": "default-allow-rdp",
					"properties": {
						"protocol": "Tcp",
						"sourcePortRange": "*",
						"destinationPortRange": "3389",
						"sourceAddressPrefix": "*",
						"destinationAddressPrefix": "*",
						"access": "Allow",
						"priority": 100,
						"direction": "Inbound"
					}
				}
			]
		},
		"resources": [],
		"dependsOn": []
	}
    ]
}